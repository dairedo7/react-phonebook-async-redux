{"version":3,"sources":["components/ContactItem/ContactItem.module.scss","components/Filter/Filter.module.css","titleAppearing.module.css","components/ContactList/ContactList.module.css","components/ContactList/transition.module.css","phonebookAppearing.module.css","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/ContactItem/ContactItem.js","redux/filter/filter-selector.js","redux/contacts/contacts-selector.js","components/ContactList/ContactList.js","redux/filter/filter-actions.js","components/Filter/Filter.js","App.jsx","redux/contacts/contacts-reducer.js","redux/filter/filter-reducer.js","redux/store.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","ContactForm","changeContactsState","useState","name","setName","phone","setPhone","handleChange","evt","target","value","className","styles","form","onSubmit","preventDefault","action","label","htmlFor","form__field","type","id","pattern","title","placeholder","onChange","required","name__label","number__label","submit__btn","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","addContact","contact","post","deleteContact","contactId","delete","ContactItem","dispatch","useDispatch","contact__item","contact__text","delete__btn","onClick","onDeleteClick","getFilterVal","state","contacts","filter","getContacts","items","contactsLoading","loading","findContactsByQuery","nameToFilter","toLowerCase","includes","ContactList","useSelector","TransitionGroup","component","list","map","CSSTransition","in","length","timeout","classNames","transitionStyles","unmountOnExit","updateFilter","createAction","Filter","filterVal","filter__title","filter__field","App","useEffect","appear","titleAppearing","phonebookAppearing","find","alert","createReducer","fulfilled","_","payload","pending","rejected","middleware","getDefaultMiddleware","rootReducer","combineReducers","filterReducer","store","configureStore","reducer","devTools","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dacf58f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"ContactItem_contact__item__16XEi\",\"contact__text\":\"ContactItem_contact__text__b5cWT\",\"delete__btn\":\"ContactItem_delete__btn__IVdMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"filter__field\":\"Filter_filter__field__FWY-Z\",\"filter__title\":\"Filter_filter__title__3xM9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"titleAppearing_appear__MHGyE\",\"appearActive\":\"titleAppearing_appearActive__2Bv-4\",\"phonebook__title\":\"titleAppearing_phonebook__title__aiQDW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"transition_enter__2r5x1\",\"enterActive\":\"transition_enterActive__2v0qq\",\"exit\":\"transition_exit__yK9o3\",\"exitActive\":\"transition_exitActive__R_I7Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"phonebookAppearing_appear__2TEec\",\"appearActive\":\"phonebookAppearing_appearActive__3fPuZ\"};","import styles from './ContactForm.module.scss';\nimport { PropTypes } from 'prop-types';\nimport { useState } from 'react';\n\nfunction ContactForm({ changeContactsState }) {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  // const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const contact = {\n      name,\n      phone,\n    };\n\n    changeContactsState(contact);\n    resetForm();\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'phone') {\n      setPhone(value);\n    }\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit} action=\"#\">\n      <label className={styles.label} htmlFor=\"name\">\n        <input\n          className={styles.form__field}\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\" \"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n        <span className={styles.name__label}>Name</span>\n      </label>\n\n      <label className={styles.label} htmlFor=\"number\">\n        <input\n          className={styles.form__field}\n          type=\"tel\"\n          id=\"number\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\" \"\n          value={phone}\n          onChange={handleChange}\n          required\n        />\n        <span className={styles.number__label}>Number</span>\n      </label>\n      <button className={styles.submit__btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = { changeContactsState: PropTypes.func.isRequired };\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  changeContactsState: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\n\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://629b0ea3656cea05fc32b859.mockapi.io/';\n\n//Receiving contacts from backend's object\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    const { data } = await axios.get('/contacts');\n    return data;\n  }\n);\n\n//Adding contact to backend's object\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n\n  async contact => {\n    const { data } = await axios.post('/contacts', contact);\n    return data;\n  }\n);\n\n//Removing contact form backend's object\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n\n  async contactId => {\n    const {\n      data: { id },\n    } = await axios.delete(`/contacts/${contactId}`);\n    return id;\n  }\n);\n\n// import {\n//   addContactsRequest,\n//   addContactsSuccess,\n//   addContactsError,\n// } from './contacts-actions';\n\n// export const addContact = data => dispatch => {\n//   const contact = {\n//     data,\n//     completed: false,\n//   };\n\n//   dispatch(addContactsRequest());\n\n//   axios\n//     .post('/contacts', contact)\n//     .then(({ data }) => dispatch(addContactsSuccess(data)))\n//     .catch(error => dispatch(addContactsError(error)));\n// };\n","import { PropTypes } from 'prop-types';\nimport styles from './ContactItem.module.scss';\n\nimport { deleteContact } from 'redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\nexport default function ContactItem({ contact }) {\n  const { name, phone, id } = contact;\n\n  const dispatch = useDispatch();\n\n  const onDeleteClick = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <li key={id} className={styles.contact__item}>\n      <span className={styles.contact__text}>\n        {name}: {phone}\n      </span>\n      <button className={styles.delete__btn} onClick={() => onDeleteClick(id)}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }),\n};\n","export const getFilterVal = state => state.contacts.filter;\n","import { getFilterVal } from 'redux/filter/filter-selector';\n\nexport const getContacts = state => state.contacts.items;\nexport const contactsLoading = state => state.contacts.loading;\n\nexport const findContactsByQuery = state => {\n  const contacts = getContacts(state);\n  const nameToFilter = getFilterVal(state);\n\n  return contacts.filter(\n    ({ name, phone }) =>\n      name.toLowerCase().includes(nameToFilter.toLowerCase()) ||\n      phone.includes(nameToFilter)\n  );\n};\n","import ContactItem from '../ContactItem/ContactItem';\nimport styles from './ContactList.module.css';\nimport transitionStyles from './transition.module.css';\n\nimport { useSelector } from 'react-redux';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport { findContactsByQuery } from 'redux/contacts/contacts-selector';\n// import { defaultContacts } from 'redux/contacts/contacts-selector';\n\nexport default function ContactList() {\n  const contacts = useSelector(findContactsByQuery);\n\n  // const defContacts = useSelector(defaultContacts);\n  // const onDeleteClick = id => dispatch(deleteContact(id));\n\n  return (\n    <TransitionGroup component=\"ul\" className={styles.list}>\n      {contacts.map(contact => (\n        <CSSTransition\n          in={contacts.length > 0}\n          key={contact.id}\n          timeout={250}\n          classNames={transitionStyles}\n          unmountOnExit\n        >\n          <ContactItem key={contact.name} contact={contact} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const updateFilter = createAction('contacts/updateFilter');\n","import styles from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterVal } from 'redux/filter/filter-selector';\nimport { updateFilter } from 'redux/filter/filter-actions';\n\nexport default function Filter() {\n  const filterVal = useSelector(getFilterVal);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { value } }) => dispatch(updateFilter(value));\n\n  return (\n    <>\n      <div className={styles.filter}>\n        <p className={styles.filter__title}>Find contacts by name</p>\n        <input\n          className={styles.filter__field}\n          type=\"text\"\n          name=\"name\"\n          value={filterVal}\n          placeholder=\"Enter the name...\"\n          onChange={handleChange}\n        />\n      </div>\n    </>\n  );\n}\n","// import { nanoid } from 'nanoid';\nimport ContactForm from './components/ContactForm/ContactForm.js';\nimport ContactList from './components/ContactList/ContactList.js';\nimport Filter from './components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getContacts } from 'redux/contacts/contacts-selector';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { contactsLoading } from 'redux/contacts/contacts-selector';\n\nimport './index.css';\nimport { CSSTransition } from 'react-transition-group';\nimport titleAppearing from './titleAppearing.module.css';\nimport phonebookAppearing from './phonebookAppearing.module.css';\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const loading = useSelector(contactsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const updateContacts = ({ name, phone }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`${name} is already in contacts list!`);\n    } else {\n      dispatch(addContact({ name, phone }));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"phonebook__container\">\n        <CSSTransition\n          in\n          appear\n          timeout={500}\n          classNames={titleAppearing}\n          unmountOnExit\n        >\n          <h1 className=\"phonebook__title\">Phonebook</h1>\n        </CSSTransition>\n\n        <CSSTransition\n          in\n          appear\n          timeout={500}\n          classNames={phonebookAppearing}\n          unmountOnExit\n        >\n          <ContactForm changeContactsState={updateContacts} />\n        </CSSTransition>\n        {loading && <h1 className=\"loading\">Loading...</h1>}\n        <CSSTransition\n          in\n          appear\n          timeout={500}\n          classNames={titleAppearing}\n          unmountOnExit\n        >\n          <h2 className=\"contacts__title\">Contacts</h2>\n        </CSSTransition>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\n\n// import { addContactsSuccess } from './contacts-actions';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from './contacts-operations';\n\nexport const items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport const loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n// export default items;\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport { updateFilter } from './filter-actions';\n\nconst filter = createReducer('', {\n  [updateFilter]: (_, { payload }) => payload,\n});\n\nexport default filter;\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\n\n// import storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport { items, loading } from './contacts/contacts-reducer';\nimport filterReducer from './filter/filter-reducer';\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst rootReducer = combineReducers({\n  items,\n  filter: filterReducer,\n  loading,\n});\n\nexport const store = configureStore({\n  reducer: {\n    contacts: rootReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// export const persistor = persistStore(store); // wrapper for store to update the localStorage\n\n// fetch.then(x => dispatch(action(x))).catch(y => dispatch(action(y)));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport App from 'App';\nimport { store } from 'redux/store';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <PersistGate loading={null} persistor={persistor}> */}\n    <App />\n    {/* </PersistGate> */}\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1NiH1\",\"submit__btn\":\"ContactForm_submit__btn__eF7FL\",\"name__label\":\"ContactForm_name__label__Ygtj5\",\"number__label\":\"ContactForm_number__label__2UXJd\",\"form__field\":\"ContactForm_form__field__3Q27b\",\"label\":\"ContactForm_label__3KgVy\"};"],"sourceRoot":""}